{"version":3,"sources":["components/Search.tsx","components/Header.tsx","utilities/get-recent.utils.ts","components/ImagePreview.tsx","components/Image.tsx","components/Content.tsx","components/ViewersWarning.tsx","components/Loader.tsx","components/Error.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["searchApi","text","Search","props","useState","searchTerm","setSearchTerm","error","setError","debouncedSearch","useRef","debounce","url","onSearch","current","fetch","then","res","json","data","console","log","onSearchSuccess","catch","e","Form","className","FormControl","type","placeholder","aria-label","onChange","target","value","Button","variant","onClick","onSearchClear","Header","Navbar","bg","expand","fixed","Container","Brand","href","PHOTO_SIZE","makeUrl","photo","farm","server","id","secret","ImagePreview","replace","_nTo_z","stopPropagation","Modal","show","shouldShow","onHide","keyboard","size","aria-labelledby","centered","Title","title","Body","src","alt","Footer","ImageContainer","Styled","div","Image","showPreview","setShowPreview","ContentContainer","section","Content","photos","map","p","image","index","ViewersWarning","shouldShowAgain","localStorage","getItem","setShow","handleClose","window","close","backdrop","setItem","LoaderContainer","Loader","ErrorContainer","Error","App","page","setPage","initialData","setPhotos","loading","setLoading","searchTerms","setSearchTerms","scrollTop","setScrollTop","seenApis","setSeenApis","inSearch","setInSearch","loadPhotosFromNetwork","api","GetRecentApi","includes","_photos","scrollListener","document","documentElement","scrollHeight","offsetHeight","removeEventListener","useEffect","addEventListener","style","opacity","location","buttonText","cookieName","background","fontWeight","buttonStyle","color","term","JSON","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bed76e4e.chunk.js","sourcesContent":["import React, {useRef, useState} from \"react\";\n\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport debounce from 'lodash.debounce';\n\nconst searchApi = (text: string) => `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=84bf9b29bce8db001d1e58dbec8a5770&text=${text}&format=json&nojsoncallback=1`;\n\nfunction Search(props: any) {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [error, setError] = useState(false);\n\n    const debouncedSearch = useRef(debounce(url => onSearch(searchApi(url)), 1000)).current;\n\n    function onSearch(url: string) {\n        // console.log('search', url);\n        fetch(url)\n            .then((res: Response) => res.json())\n            .then(data => {\n                console.log(`data from search on: `, searchTerm, data);\n                props.onSearchSuccess(data, searchTerm);\n            })\n            .catch((e: Error) => {\n                console.error('error while searching...', e);\n                setError(true);\n            });\n    }\n\n    function handleClear() {\n        setSearchTerm('');\n        props.onSearchClear();\n    }\n\n    return (\n        <>\n            {!error &&\n            <Form className=\"d-flex\">\n                <FormControl\n                    type=\"search\"\n                    placeholder=\"Search\"\n                    className=\"input search-input\"\n                    aria-label=\"Search\"\n                    onChange={e => {\n                        setSearchTerm(e.target.value);\n                        debouncedSearch(e.target.value);\n                    }}\n                    value={searchTerm}\n                />\n                {searchTerm &&\n                <Button variant=\"outline-success\" onClick={() => onSearch(searchApi(searchTerm))}>Search</Button>}\n                {searchTerm &&\n                <Button variant=\"warning\" className=\"clear-current-search\" onClick={handleClear}>X</Button>}\n            </Form>\n            }\n            {\n                error && <>Search failed</>\n            }\n        </>\n    );\n\n}\n\nexport default Search;\n","import React from 'react';\nimport {Container, Navbar} from \"react-bootstrap\";\nimport Search from \"./Search\";\n\nfunction Header(props: any) {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\" fixed={\"top\"}>\n            <Container>\n                <Navbar.Brand href=\"/slickr\" onClick={props.onSearchClear}>Slickr</Navbar.Brand>\n                <Search onSearchSuccess={props.onSearchSuccess} onSearchClear={props.onSearchClear}/>\n            </Container>\n        </Navbar>\n    );\n}\n\nexport default Header;\n","import {PhotoType, ImageType} from \"../types/photos.types\";\n\nconst PHOTO_SIZE = {\n    thumbnail75: '_s',\n    thumbnail150: '_q',\n    thumbnail100: '_t',\n    small240: '_m',\n    small320: '_n',\n    small400: '_w',\n    medium500: '',\n    medium640: '_z',\n    medium800: '_c'\n};\n\nfunction photosToUrls(photos: PhotoType[]): string[] {\n    return photos.map(makeUrl);\n}\n\nfunction makeUrl(photo: PhotoType): string {\n    return `http://farm${photo.farm}.static.flickr.com/${photo.server}/${photo.id}_${photo.secret}${PHOTO_SIZE.small320}.jpg`;\n}\n\nfunction photosToImages(photos: PhotoType[]): ImageType[] {\n    return photos.map((p: PhotoType) => {\n        return {url: makeUrl(p), title: p.title};\n    });\n}\n\nfunction _nTo_z(url: string): string {\n    return url.replace('_n', '_z');\n}\n\nexport {makeUrl, photosToUrls, photosToImages, _nTo_z};\n","import React from \"react\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport {_nTo_z} from \"../utilities/get-recent.utils\";\n\nfunction ImagePreview(props: any) {\n    const url = _nTo_z(props.url);\n\n    return (\n        <div onClick={e => e.stopPropagation()}>\n            <Modal\n                show={props.shouldShow}\n                onHide={props.onHide}\n                keyboard={true}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header>\n                    <Modal.Title>{props.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <img src={url} alt={`${props.title} at ${url}`}/>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={props.onHide}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n}\n\nexport default ImagePreview;","import React, {useState} from \"react\";\nimport Styled from 'styled-components';\nimport ImagePreview from \"./ImagePreview\";\n\nconst ImageContainer = Styled.div`\n    border: 1px solid grey;\n    margin: 1rem auto;\n    padding: 1rem;\n    box-shadow: 1px 1px 3px #333;\n    width: calc(100% - 6rem);\n    height: 300px;\n    vertical-align: top;\n    \n    @media (min-width: 960px) {\n        display: inline-block;\n        width: 300px;\n        margin: 1rem;\n        padding: 1rem;\n        a.link {\n            display: none;\n        }\n    }\n    \n    & img {\n        width: 100%;\n        max-height: calc(300px - 4rem);\n    }\n    & label {\n        text-align: center;\n        width: 100%;\n        background-color: rgba(132, 132, 132, 0.2);\n        color: #333;\n        font-weight: bold;\n        padding: .5em;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n    & a.link {\n        text-decoration: none;\n        color: red;\n        padding: 0 .2em;\n    }\n`;\n\ntype ImageProps = {\n    src: string;\n    alt: string;\n    height?: string;\n    width?: string;\n    title?: string;\n    url: string;\n}\n\nfunction Image(props: ImageProps) {\n    const [showPreview, setShowPreview] = useState(false);\n\n    function hidePreview() {\n        setShowPreview(false);\n    }\n\n    return <ImageContainer className={'image-container'} onClick={() => setShowPreview(true)}>\n        {props.title && <label>{props.title}</label>}\n        <img {...props} />\n        {props.url && <a className=\"link\" href={props.url}>download</a>}\n        {showPreview && <ImagePreview shouldShow={showPreview} onHide={hidePreview} {...props}/>}\n    </ImageContainer>;\n}\n\nexport default Image;\n\n","import React from 'react';\nimport Styled from \"styled-components\";\nimport Image from \"./Image\";\nimport {ImageType} from '../types/photos.types';\nimport {photosToImages} from \"../utilities/get-recent.utils\";\n\nconst ContentContainer = Styled.section`\n    width: 100%;\n    padding: 1em;\n    \n    @media (min-width: 960px) {\n        width: 95%;\n        margin: auto;\n    }\n`;\n\nfunction Content(props: any) {\n\n    return <ContentContainer>\n        {\n            photosToImages(props.photos).map((image: ImageType, index: number) => {\n                return <Image\n                    key={`photo-${index}`}\n                    src={image.url}\n                    alt={`${image.title} at ${image.url}`}\n                    title={image.title}\n                    url={image.url}\n                />;\n            })\n        }\n\n    </ContentContainer>;\n}\n\nexport default Content;\n","import React, {useState} from \"react\";\nimport {Button, Modal} from \"react-bootstrap\";\n\nfunction ViewersWarning() {\n    const shouldShowAgain = localStorage.getItem('content-warning');\n    const [show, setShow] = useState(shouldShowAgain !== 'ok');\n\n    const handleClose = () => {\n        setShow(false);\n        window.close();\n    };\n\n    const handleOk = () => {\n        setShow(false);\n        localStorage.setItem('content-warning', 'ok');\n    };\n\n    return (\n        <>\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header>\n                    <Modal.Title>Warning: Unfiltered content.</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    This application fetches images from public service.<br/>\n                    People may choose to upload disturbing content, containing but not limited to:<br/>\n                    sexual, child abuse, self-harm, gore, mutilation etc.\n                    <br/>\n                    Continue only if you are okay with this.\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close the browser tab/window.\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleOk}>I understand. Let me continue to app anyway.</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default ViewersWarning;\n","import React from \"react\";\nimport Styled from \"styled-components\";\n\nconst LoaderContainer = Styled.div`\n    z-index: 1000;\n    background-color: white;\n    color: red;\n    font-size: 30px;\n    position: fixed;\n    top: 30%;\n    left: 0; right: 0;\n    text-align: center;\n    padding: 100px;\n`;\n\ntype LoaderPropsType = {\n    show: boolean\n}\n\nfunction Loader(props: LoaderPropsType) {\n    return <>\n        {\n            props.show && <LoaderContainer>\n                <div id=\"loader\">\n                    Loading...\n                </div>\n            </LoaderContainer>\n        }\n    </>;\n}\n\nexport default Loader;\n","import React from \"react\";\nimport Styled from \"styled-components\";\n\nconst ErrorContainer = Styled.div`\n    z-index: 1000;\n    height: calc(100%-10px);\n    width: calc(100%-100px);\n    background-color: rgba(248, 248, 248, 0.2);\n    color: red;\n    font-size: 40px;\n    position: fixed;\n    top: 30%;\n    left: 10%;\n    right: 10%;\n    text-align: center;\n    padding: 100px;\n`;\n\ntype ErrorPropsType = {\n    show: boolean\n}\n\nfunction Error(props: ErrorPropsType) {\n    return <>\n        {\n            props.show && <ErrorContainer>\n                <div id=\"error\">\n                    Error. Try again.\n                </div>\n            </ErrorContainer>\n        }\n    </>;\n}\n\nexport default Error;\n","import React, {useEffect, useState} from 'react';\n\nimport './styles/App.css';\nimport Header from './components/Header';\nimport Content from \"./components/Content\";\nimport initialData from './initialData/photos.json';\nimport {ApiResponseType} from \"./types/photos.types\";\nimport CookieConsent from 'react-cookie-consent';\nimport ViewersWarning from \"./components/ViewersWarning\";\nimport Loader from \"./components/Loader\";\nimport Error from \"./components/Error\";\n\nconst GetRecentApi = (page: number = 1) => `https://api.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=84bf9b29bce8db001d1e58dbec8a5770&per_page=25&page=${page}&format=json&nojsoncallback=1`;\n\nfunction App() {\n    const initialSearchTerms: string[] = [];\n    const [page, setPage] = useState(1);\n    const [photos, setPhotos] = useState(initialData.photos.photo);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [searchTerms, setSearchTerms] = useState(initialSearchTerms);\n    const [scrollTop, setScrollTop] = useState(0);\n    const [seenApis, setSeenApis] = useState('');\n    const [inSearch, setInSearch] = useState(false);\n\n    function loadPhotosFromNetwork() {\n        if (!loading) {\n            const api = GetRecentApi(page);\n            if (seenApis.includes(api)) return;\n            setSeenApis(seenApis + ';' + api);\n            setLoading(true);\n            fetch(api)\n                .then((res: Response) => res.json())\n                .then((data: ApiResponseType) => {\n                    const _photos = page === 1 ? [...data.photos.photo] : [...photos, ...data.photos.photo];\n                    setPhotos(_photos);\n                    // console.log('fetched from get recent api', api);\n                    setLoading(false);\n                })\n                .catch((e: Error) => {\n                    // console.error(e);\n                    setLoading(false);\n                    setError(true);\n                });\n        }\n    }\n\n    const scrollListener = () => {\n        const {scrollTop} = document.documentElement;\n        setScrollTop(scrollTop);\n        if (scrollTop >= document.documentElement.scrollHeight - 1 * document.documentElement.offsetHeight) {\n            setPage(page + 1);\n            document.removeEventListener('scroll', scrollListener);\n        }\n    };\n\n    useEffect(() => {\n        if (!inSearch) {\n            loadPhotosFromNetwork();\n            document.addEventListener('scroll', scrollListener, true);\n            return () => {\n                document.removeEventListener('scroll', scrollListener);\n            };\n        }\n    }, [scrollTop]);\n\n    function handleSearchResponse(data: ApiResponseType, term: string) {\n\n        setInSearch(true);\n        setPhotos(data.photos.photo);\n        if (term !== '' && !searchTerms.includes(term)) {\n            setSearchTerms([...searchTerms, term]);\n            localStorage.setItem('search-terms', JSON.stringify([...searchTerms, term]));\n        }\n        \n    }\n\n    function exitFromSearch() {\n        setPage(1);\n        setPhotos(initialData.photos.photo);\n        setInSearch(false);\n        loadPhotosFromNetwork();\n    }\n\n    return (\n        <div className=\"App\" style={{opacity: loading ? 0.4 : 1}}>\n            <ViewersWarning/>\n            <CookieConsent\n                location=\"bottom\"\n                buttonText=\"I understand. Use cookies.\"\n                cookieName=\"slickr-cookie-consent\"\n                style={{background: \"#2B373B\", fontWeight: \"bold\"}}\n                buttonStyle={{color: \"#4e503b\"}}\n            >\n                This website uses cookies to enhance the user experience.\n                <br/>\n                Experience will be suboptimal without it. Please do not use app if you do not consent.\n            </CookieConsent>\n\n            <Header onSearchSuccess={handleSearchResponse} onSearchClear={exitFromSearch}/>\n            <Content photos={photos}/>\n            <Error show={error}/>\n            <Loader show={loading}/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}